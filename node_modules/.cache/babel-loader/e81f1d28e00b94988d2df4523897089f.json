{"ast":null,"code":"import _ from \"lodash\";\nimport { API_KEY_MOVIE_DB, URL_POSTER_PATH_MOVIE } from \"./constants\";\nconst myInit = {\n  method: \"GET\",\n  mode: \"cors\"\n};\n\nconst getRamdomActor = async () => {\n  // fetch les acteurs populaire\n  const actors = await fetch(`https://api.themoviedb.org/3/person/popular?api_key=${API_KEY_MOVIE_DB}&language=en-US&page=1`, myInit).then(res => res.json()); // prendre un acteur random\n\n  const randomActor = actors.results.map(actor => {\n    return {\n      name: actor.name,\n      photo: URL_POSTER_PATH_MOVIE + actor.profile_path\n    };\n  }); // random entre 0 et 20\n\n  const random_0_20 = parseInt(Math.random() * (20 - 1) + 1);\n  return randomActor[random_0_20];\n};\n\nconst getRandomMovieDetails = async () => {\n  //fetch une liste de film\n  const moviesList = await fetch(`\n    https://api.themoviedb.org/3/list/1?api_key=${API_KEY_MOVIE_DB}&language=en-US`, myInit).then(res => res.json()); // prendre un film random dans la liste\n\n  const randomMovie = _.sample(moviesList.items); // fetch ses acteurs\n\n\n  const movieCredit = await fetch(`\n    https://api.themoviedb.org/3/movie/${randomMovie.id}/credits?api_key=${API_KEY_MOVIE_DB}&language=en-US`, myInit).then(res => res.json()); // filtrer pour recup que les acteurs du film\n\n  const movieActors = movieCredit.cast.filter(el => el.known_for_department === \"Acting\").map(person => {\n    return {\n      name: person.name,\n      photo: URL_POSTER_PATH_MOVIE + person.profile_path\n    };\n  }); // retourner un objet avec le film, la couv et les acteurs\n\n  return {\n    title: randomMovie.title,\n    couv: URL_POSTER_PATH_MOVIE + randomMovie.poster_path,\n    actors: movieActors\n  };\n};\n\nexport { getRamdomActor, getRandomMovieDetails };","map":{"version":3,"sources":["/Users/gregorios/projets_perso/jeu-react-wisembly/src/helpers/ApiMoovieDBHelper.js"],"names":["_","API_KEY_MOVIE_DB","URL_POSTER_PATH_MOVIE","myInit","method","mode","getRamdomActor","actors","fetch","then","res","json","randomActor","results","map","actor","name","photo","profile_path","random_0_20","parseInt","Math","random","getRandomMovieDetails","moviesList","randomMovie","sample","items","movieCredit","id","movieActors","cast","filter","el","known_for_department","person","title","couv","poster_path"],"mappings":"AAAA,OAAOA,CAAP,MAAc,QAAd;AACA,SAASC,gBAAT,EAA2BC,qBAA3B,QAAwD,aAAxD;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,MAAM,EAAE,KADK;AAEbC,EAAAA,IAAI,EAAE;AAFO,CAAf;;AAKA,MAAMC,cAAc,GAAG,YAAY;AACjC;AACA,QAAMC,MAAM,GAAG,MAAMC,KAAK,CACvB,uDAAsDP,gBAAiB,wBADhD,EAExBE,MAFwB,CAAL,CAGnBM,IAHmB,CAGbC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAHK,CAArB,CAFiC,CAMjC;;AACA,QAAMC,WAAW,GAAGL,MAAM,CAACM,OAAP,CAAeC,GAAf,CAAoBC,KAAD,IAAW;AAChD,WAAO;AACLC,MAAAA,IAAI,EAAED,KAAK,CAACC,IADP;AAELC,MAAAA,KAAK,EAAEf,qBAAqB,GAAGa,KAAK,CAACG;AAFhC,KAAP;AAID,GALmB,CAApB,CAPiC,CAajC;;AACA,QAAMC,WAAW,GAAGC,QAAQ,CAACC,IAAI,CAACC,MAAL,MAAiB,KAAK,CAAtB,IAA2B,CAA5B,CAA5B;AACA,SAAOV,WAAW,CAACO,WAAD,CAAlB;AACD,CAhBD;;AAkBA,MAAMI,qBAAqB,GAAG,YAAY;AACxC;AACA,QAAMC,UAAU,GAAG,MAAMhB,KAAK,CAC3B;AACL,kDAAkDP,gBAAiB,iBAFnC,EAG5BE,MAH4B,CAAL,CAIvBM,IAJuB,CAIjBC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAJS,CAAzB,CAFwC,CAOxC;;AACA,QAAMc,WAAW,GAAGzB,CAAC,CAAC0B,MAAF,CAASF,UAAU,CAACG,KAApB,CAApB,CARwC,CASxC;;;AACA,QAAMC,WAAW,GAAG,MAAMpB,KAAK,CAC5B;AACL,yCAAyCiB,WAAW,CAACI,EAAG,oBAAmB5B,gBAAiB,iBAF3D,EAG7BE,MAH6B,CAAL,CAIxBM,IAJwB,CAIlBC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAJU,CAA1B,CAVwC,CAexC;;AACA,QAAMmB,WAAW,GAAGF,WAAW,CAACG,IAAZ,CACjBC,MADiB,CACTC,EAAD,IAAQA,EAAE,CAACC,oBAAH,KAA4B,QAD1B,EAEjBpB,GAFiB,CAEZqB,MAAD,IAAY;AACf,WAAO;AACLnB,MAAAA,IAAI,EAAEmB,MAAM,CAACnB,IADR;AAELC,MAAAA,KAAK,EAAEf,qBAAqB,GAAGiC,MAAM,CAACjB;AAFjC,KAAP;AAID,GAPiB,CAApB,CAhBwC,CAwBxC;;AACA,SAAO;AACLkB,IAAAA,KAAK,EAAEX,WAAW,CAACW,KADd;AAELC,IAAAA,IAAI,EAAEnC,qBAAqB,GAAGuB,WAAW,CAACa,WAFrC;AAGL/B,IAAAA,MAAM,EAAEuB;AAHH,GAAP;AAKD,CA9BD;;AAgCA,SAASxB,cAAT,EAAyBiB,qBAAzB","sourcesContent":["import _ from \"lodash\";\nimport { API_KEY_MOVIE_DB, URL_POSTER_PATH_MOVIE } from \"./constants\";\n\nconst myInit = {\n  method: \"GET\",\n  mode: \"cors\",\n};\n\nconst getRamdomActor = async () => {\n  // fetch les acteurs populaire\n  const actors = await fetch(\n    `https://api.themoviedb.org/3/person/popular?api_key=${API_KEY_MOVIE_DB}&language=en-US&page=1`,\n    myInit\n  ).then((res) => res.json());\n  // prendre un acteur random\n  const randomActor = actors.results.map((actor) => {\n    return {\n      name: actor.name,\n      photo: URL_POSTER_PATH_MOVIE + actor.profile_path,\n    };\n  });\n  // random entre 0 et 20\n  const random_0_20 = parseInt(Math.random() * (20 - 1) + 1);\n  return randomActor[random_0_20];\n};\n\nconst getRandomMovieDetails = async () => {\n  //fetch une liste de film\n  const moviesList = await fetch(\n    `\n    https://api.themoviedb.org/3/list/1?api_key=${API_KEY_MOVIE_DB}&language=en-US`,\n    myInit\n  ).then((res) => res.json());\n  // prendre un film random dans la liste\n  const randomMovie = _.sample(moviesList.items);\n  // fetch ses acteurs\n  const movieCredit = await fetch(\n    `\n    https://api.themoviedb.org/3/movie/${randomMovie.id}/credits?api_key=${API_KEY_MOVIE_DB}&language=en-US`,\n    myInit\n  ).then((res) => res.json());\n  // filtrer pour recup que les acteurs du film\n  const movieActors = movieCredit.cast\n    .filter((el) => el.known_for_department === \"Acting\")\n    .map((person) => {\n      return {\n        name: person.name,\n        photo: URL_POSTER_PATH_MOVIE + person.profile_path,\n      };\n    });\n  // retourner un objet avec le film, la couv et les acteurs\n  return {\n    title: randomMovie.title,\n    couv: URL_POSTER_PATH_MOVIE + randomMovie.poster_path,\n    actors: movieActors,\n  };\n};\n\nexport { getRamdomActor, getRandomMovieDetails };\n"]},"metadata":{},"sourceType":"module"}